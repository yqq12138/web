{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"detail-page\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"result-box\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"waiting\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.result ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"📋 最新检测信息：\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"部件名称：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString($data.result.partName), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"检测时间：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString($data.result.detectTime), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"检测结果：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString($data.result.result), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"置信度：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString($data.result.confidence) + \"%\", 1 /* TEXT */)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" 🔍 正在获取最新检测数据... \")), _cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"background-decor\"\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","result","_hoisted_2","_createElementVNode","_createTextVNode","_toDisplayString","partName","detectTime","confidence","_hoisted_3"],"sources":["D:\\web\\qianrushi\\my-first-vue-app\\src\\views\\DetectPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"detail-page\">\r\n    <div v-if=\"result\" class=\"result-box\">\r\n      <h2>📋 最新检测信息：</h2>\r\n      <p><strong>部件名称：</strong>{{ result.partName }}</p>\r\n      <p><strong>检测时间：</strong>{{ result.detectTime }}</p>\r\n      <p><strong>检测结果：</strong>{{ result.result }}</p>\r\n      <p><strong>置信度：</strong>{{ result.confidence }}%</p>\r\n    </div>\r\n    <div v-else class=\"waiting\">\r\n      🔍 正在获取最新检测数据...\r\n    </div>\r\n    <div class=\"background-decor\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'DetectPage',\r\n  data() {\r\n    return {\r\n      result: null,\r\n      timer: null,\r\n      lastDetectTime: null // ⏰ 缓存上一次的 detect_time\r\n    }\r\n  },\r\n  methods: {\r\n    fetchLatestResult() {\r\n      axios.get('/api/detect/latest')\r\n          .then(res => {\r\n            const newResult = res.data\r\n            const newTime = new Date(newResult.detectTime || newResult.time)\r\n\r\n            // 🧠 只在 detect_time 更晚时才更新\r\n            if (!this.lastDetectTime || newTime > new Date(this.lastDetectTime)) {\r\n              this.result = newResult\r\n              this.lastDetectTime = newResult.detectTime || newResult.time\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.error('获取最新检测数据失败：', err)\r\n          })\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchLatestResult()\r\n    this.timer = setInterval(this.fetchLatestResult, 10000) // 每 10 秒轮询一次\r\n  },\r\n  beforeUnmount() {\r\n    if (this.timer) clearInterval(this.timer)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.detail-page {\r\n  position: absolute;\r\n  top: 60px; /* 避开导航栏 */\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: linear-gradient(to right, #232526, #414345);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 40px 20px;\r\n  box-sizing: border-box;\r\n  overflow: auto;\r\n}\r\n\r\n.result-box {\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #00eaff55;\r\n  padding: 30px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 0 20px rgba(0, 234, 255, 0.1);\r\n  text-align: left;\r\n  max-width: 600px;\r\n  width: 100%;\r\n}\r\n\r\n.result-box h2 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  color: #00eaff;\r\n}\r\n\r\n.result-box p {\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n  line-height: 1.5;\r\n  color: #e0f7ff;\r\n}\r\n\r\n.waiting {\r\n  font-size: 20px;\r\n  color: #ccc;\r\n  font-style: italic;\r\n  text-align: center;\r\n}\r\n\r\n.background-decor {\r\n  position: absolute;\r\n  bottom: -100px;\r\n  left: -150px;\r\n  width: 400px;\r\n  height: 400px;\r\n  background: radial-gradient(circle at center, rgba(0, 234, 255, 0.3), transparent);\r\n  filter: blur(120px);\r\n  pointer-events: none;\r\n  user-select: none;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EAD1BC,GAAA;EAEuBD,KAAK,EAAC;;;EAF7BC,GAAA;EASgBD,KAAK,EAAC;;;uBARpBE,mBAAA,CAYM,OAZNC,UAYM,GAXOC,KAAA,CAAAC,MAAM,I,cAAjBH,mBAAA,CAMM,OANNI,UAMM,G,0BALJC,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAAkD,Y,0BAA/CA,mBAAA,CAAsB,gBAAd,OAAK,sBAJtBC,gBAAA,CAAAC,gBAAA,CAIkCL,KAAA,CAAAC,MAAM,CAACK,QAAQ,iB,GAC3CH,mBAAA,CAAoD,Y,0BAAjDA,mBAAA,CAAsB,gBAAd,OAAK,sBALtBC,gBAAA,CAAAC,gBAAA,CAKkCL,KAAA,CAAAC,MAAM,CAACM,UAAU,iB,GAC7CJ,mBAAA,CAAgD,Y,0BAA7CA,mBAAA,CAAsB,gBAAd,OAAK,sBANtBC,gBAAA,CAAAC,gBAAA,CAMkCL,KAAA,CAAAC,MAAM,CAACA,MAAM,iB,GACzCE,mBAAA,CAAoD,Y,0BAAjDA,mBAAA,CAAqB,gBAAb,MAAI,sBAPrBC,gBAAA,CAAAC,gBAAA,CAOiCL,KAAA,CAAAC,MAAM,CAACO,UAAU,IAAG,GAAC,gB,sBAElDV,mBAAA,CAEM,OAFNW,UAEM,EAFsB,oBAE5B,I,0BACAN,mBAAA,CAAoC;IAA/BP,KAAK,EAAC;EAAkB,4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}