{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'UploadPage',\n  data() {\n    return {\n      selectedFile: null,\n      uploading: false,\n      uploadProgress: 0,\n      errorMessage: ''\n    };\n  },\n  methods: {\n    handleFileChange(event) {\n      this.errorMessage = '';\n      const file = event.target.files[0];\n\n      // 验证文件类型\n      const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg'];\n      if (!allowedTypes.includes(file.type)) {\n        this.errorMessage = '仅支持JPEG、PNG格式的图片';\n        return;\n      }\n\n      // 验证文件大小 (5MB限制)\n      if (file.size > 5 * 1024 * 1024) {\n        this.errorMessage = '图片大小不能超过5MB';\n        return;\n      }\n      this.selectedFile = file;\n    },\n    uploadImage() {\n      if (!this.selectedFile) {\n        this.errorMessage = '请先选择一张图片！';\n        return;\n      }\n      this.uploading = true;\n      this.uploadProgress = 0;\n      this.errorMessage = '';\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      axios.post('/api/detect/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        onUploadProgress: progressEvent => {\n          this.uploadProgress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        }\n      }).then(() => {\n        // 移除了未使用的response参数\n        alert('图片上传成功！');\n        this.resetForm();\n      }).catch(err => {\n        console.error('上传失败', err);\n        if (err.response) {\n          this.errorMessage = err.response.data.message || '上传失败，请稍后重试！';\n        } else if (err.request) {\n          this.errorMessage = '网络错误，请检查网络连接';\n        } else {\n          this.errorMessage = '上传过程中发生错误';\n        }\n      }).finally(() => {\n        this.uploading = false;\n      });\n    },\n    resetForm() {\n      this.selectedFile = null;\n      this.uploadProgress = 0;\n      this.$refs.fileInput.value = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","selectedFile","uploading","uploadProgress","errorMessage","methods","handleFileChange","event","file","target","files","allowedTypes","includes","type","size","uploadImage","formData","FormData","append","post","headers","localStorage","getItem","onUploadProgress","progressEvent","Math","round","loaded","total","then","alert","resetForm","catch","err","console","error","response","message","request","finally","$refs","fileInput","value"],"sources":["D:\\web\\my-first-vue-app\\src\\views\\UploadPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"upload-page\">\r\n    <section class=\"upload-section\">\r\n      <h1>上传检测图片</h1>\r\n\r\n      <input\r\n          type=\"file\"\r\n          ref=\"fileInput\"\r\n          accept=\"image/jpeg, image/png, image/jpg\"\r\n          @change=\"handleFileChange\"\r\n      />\r\n\r\n      <div v-if=\"uploadProgress > 0 && uploadProgress < 100\" class=\"progress-bar\">\r\n        <div class=\"progress\" :style=\"{ width: uploadProgress + '%' }\"></div>\r\n      </div>\r\n\r\n      <div v-if=\"errorMessage\" class=\"error-message\">\r\n        {{ errorMessage }}\r\n      </div>\r\n\r\n      <button\r\n          class=\"upload-button\"\r\n          :disabled=\"!selectedFile || uploading\"\r\n          @click=\"uploadImage\"\r\n      >\r\n        {{ uploading ? `上传中...${uploadProgress}%` : '开始上传' }}\r\n      </button>\r\n    </section>\r\n\r\n    <div class=\"background-decor\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'UploadPage',\r\n  data() {\r\n    return {\r\n      selectedFile: null,\r\n      uploading: false,\r\n      uploadProgress: 0,\r\n      errorMessage: ''\r\n    }\r\n  },\r\n  methods: {\r\n    handleFileChange(event) {\r\n      this.errorMessage = ''\r\n      const file = event.target.files[0]\r\n\r\n      // 验证文件类型\r\n      const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg']\r\n      if (!allowedTypes.includes(file.type)) {\r\n        this.errorMessage = '仅支持JPEG、PNG格式的图片'\r\n        return\r\n      }\r\n\r\n      // 验证文件大小 (5MB限制)\r\n      if (file.size > 5 * 1024 * 1024) {\r\n        this.errorMessage = '图片大小不能超过5MB'\r\n        return\r\n      }\r\n\r\n      this.selectedFile = file\r\n    },\r\n    uploadImage() {\r\n      if (!this.selectedFile) {\r\n        this.errorMessage = '请先选择一张图片！'\r\n        return\r\n      }\r\n\r\n      this.uploading = true\r\n      this.uploadProgress = 0\r\n      this.errorMessage = ''\r\n\r\n      const formData = new FormData()\r\n      formData.append('file', this.selectedFile)\r\n\r\n      axios.post('/api/detect/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          this.uploadProgress = Math.round(\r\n              (progressEvent.loaded * 100) / progressEvent.total\r\n          )\r\n        }\r\n      })\r\n          .then(() => {  // 移除了未使用的response参数\r\n            alert('图片上传成功！')\r\n            this.resetForm()\r\n          })\r\n          .catch(err => {\r\n            console.error('上传失败', err)\r\n            if (err.response) {\r\n              this.errorMessage = err.response.data.message || '上传失败，请稍后重试！'\r\n            } else if (err.request) {\r\n              this.errorMessage = '网络错误，请检查网络连接'\r\n            } else {\r\n              this.errorMessage = '上传过程中发生错误'\r\n            }\r\n          })\r\n          .finally(() => {\r\n            this.uploading = false\r\n          })\r\n    },\r\n    resetForm() {\r\n      this.selectedFile = null\r\n      this.uploadProgress = 0\r\n      this.$refs.fileInput.value = null\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 原有样式保持不变，新增以下样式 */\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 8px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress {\r\n  height: 100%;\r\n  background: linear-gradient(135deg, #00eaff, #0072ff);\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.error-message {\r\n  color: #ff6b6b;\r\n  margin-bottom: 15px;\r\n  font-size: 14px;\r\n}\r\n\r\n.upload-page {\r\n  position: absolute;\r\n  top: 60px;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: linear-gradient(to right, #232526, #414345);\r\n  color: #fff;\r\n  overflow: auto;\r\n  padding: 40px 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.upload-section {\r\n  max-width: 600px;\r\n  width: 100%;\r\n  text-align: center;\r\n  background: rgba(0,0,0,0.3);\r\n  padding: 40px 30px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 0 20px rgba(0, 234, 255, 0.1);\r\n}\r\n\r\n.upload-section h1 {\r\n  font-size: 40px;\r\n  margin-bottom: 30px;\r\n  text-shadow: 1px 1px 4px #000;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  margin-bottom: 30px;\r\n  color: #e0f7ff;\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-button {\r\n  padding: 12px 30px;\r\n  background: linear-gradient(135deg, #00eaff, #0072ff);\r\n  border: none;\r\n  border-radius: 20px;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  transition: 0.3s ease;\r\n}\r\n\r\n.upload-button:disabled {\r\n  background: #555;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.upload-button:hover:not(:disabled) {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 0 10px #00eaffaa;\r\n}\r\n\r\n.background-decor {\r\n  position: absolute;\r\n  bottom: -100px;\r\n  right: -150px;\r\n  width: 400px;\r\n  height: 400px;\r\n  background: radial-gradient(circle at center, rgba(0, 234, 255, 0.3), transparent);\r\n  filter: blur(120px);\r\n  pointer-events: none;\r\n  user-select: none;\r\n}\r\n</style>\r\n"],"mappings":"AAkCA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,KAAK;MAChBC,cAAc,EAAE,CAAC;MACjBC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACH,YAAW,GAAI,EAAC;MACrB,MAAMI,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;;MAEjC;MACA,MAAMC,YAAW,GAAI,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW;MAC5D,IAAI,CAACA,YAAY,CAACC,QAAQ,CAACJ,IAAI,CAACK,IAAI,CAAC,EAAE;QACrC,IAAI,CAACT,YAAW,GAAI,kBAAiB;QACrC;MACF;;MAEA;MACA,IAAII,IAAI,CAACM,IAAG,GAAI,IAAI,IAAG,GAAI,IAAI,EAAE;QAC/B,IAAI,CAACV,YAAW,GAAI,aAAY;QAChC;MACF;MAEA,IAAI,CAACH,YAAW,GAAIO,IAAG;IACzB,CAAC;IACDO,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC,IAAI,CAACd,YAAY,EAAE;QACtB,IAAI,CAACG,YAAW,GAAI,WAAU;QAC9B;MACF;MAEA,IAAI,CAACF,SAAQ,GAAI,IAAG;MACpB,IAAI,CAACC,cAAa,GAAI;MACtB,IAAI,CAACC,YAAW,GAAI,EAAC;MAErB,MAAMY,QAAO,GAAI,IAAIC,QAAQ,CAAC;MAC9BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACjB,YAAY;MAEzCH,KAAK,CAACqB,IAAI,CAAC,oBAAoB,EAAEH,QAAQ,EAAE;QACzCI,OAAO,EAAE;UACP,cAAc,EAAE,qBAAqB;UACrC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D,CAAC;QACDC,gBAAgB,EAAEC,aAAY,IAAK;UACjC,IAAI,CAACrB,cAAa,GAAIsB,IAAI,CAACC,KAAK,CAC3BF,aAAa,CAACG,MAAK,GAAI,GAAG,GAAIH,aAAa,CAACI,KACjD;QACF;MACF,CAAC,EACIC,IAAI,CAAC,MAAM;QAAG;QACbC,KAAK,CAAC,SAAS;QACf,IAAI,CAACC,SAAS,CAAC;MACjB,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;QACZC,OAAO,CAACC,KAAK,CAAC,MAAM,EAAEF,GAAG;QACzB,IAAIA,GAAG,CAACG,QAAQ,EAAE;UAChB,IAAI,CAAChC,YAAW,GAAI6B,GAAG,CAACG,QAAQ,CAACpC,IAAI,CAACqC,OAAM,IAAK,aAAY;QAC/D,OAAO,IAAIJ,GAAG,CAACK,OAAO,EAAE;UACtB,IAAI,CAAClC,YAAW,GAAI,cAAa;QACnC,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,WAAU;QAChC;MACF,CAAC,EACAmC,OAAO,CAAC,MAAM;QACb,IAAI,CAACrC,SAAQ,GAAI,KAAI;MACvB,CAAC;IACP,CAAC;IACD6B,SAASA,CAAA,EAAG;MACV,IAAI,CAAC9B,YAAW,GAAI,IAAG;MACvB,IAAI,CAACE,cAAa,GAAI;MACtB,IAAI,CAACqC,KAAK,CAACC,SAAS,CAACC,KAAI,GAAI,IAAG;IAClC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}