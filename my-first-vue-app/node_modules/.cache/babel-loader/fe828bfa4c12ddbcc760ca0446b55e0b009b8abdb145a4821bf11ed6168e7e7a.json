{"ast":null,"code":"export default {\n  data() {\n    return {\n      title: 'Êú¨üâëÊúÄÁà±ÁöÑ BGM',\n      artist: 'ËôöÊãüÊ≠åÂß¨ AIÈÖ±',\n      cover: 'https://link-to-cover.jpg',\n      audioSrc: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3',\n      isPlaying: false,\n      duration: 0,\n      currentTime: 0\n    };\n  },\n  computed: {\n    currentTimeDisplay() {\n      return this.formatTime(this.currentTime);\n    },\n    durationDisplay() {\n      return this.formatTime(this.duration);\n    }\n  },\n  methods: {\n    togglePlay() {\n      const audio = this.$refs.audio;\n      if (this.isPlaying) {\n        audio.pause();\n      } else {\n        audio.play();\n      }\n      this.isPlaying = !this.isPlaying;\n    },\n    updateTime() {\n      this.currentTime = this.$refs.audio.currentTime;\n    },\n    loadMetadata() {\n      this.duration = this.$refs.audio.duration;\n    },\n    seekAudio() {\n      this.$refs.audio.currentTime = this.currentTime;\n    },\n    formatTime(time) {\n      const minutes = Math.floor(time / 60);\n      const seconds = Math.floor(time % 60).toString().padStart(2, '0');\n      return `${minutes}:${seconds}`;\n    }\n  }\n};","map":{"version":3,"names":["data","title","artist","cover","audioSrc","isPlaying","duration","currentTime","computed","currentTimeDisplay","formatTime","durationDisplay","methods","togglePlay","audio","$refs","pause","play","updateTime","loadMetadata","seekAudio","time","minutes","Math","floor","seconds","toString","padStart"],"sources":["D:\\web\\my-first-vue-app\\src\\components\\MusicPlayer.vue"],"sourcesContent":["<template>\r\n  <div class=\"player-container\">\r\n    <img :src=\"cover\" alt=\"Â∞ÅÈù¢\" class=\"cover\" />\r\n    <h2>{{ title }}</h2>\r\n    <h4>{{ artist }}</h4>\r\n\r\n    <audio ref=\"audio\" :src=\"audioSrc\" @timeupdate=\"updateTime\" @loadedmetadata=\"loadMetadata\"></audio>\r\n\r\n    <div class=\"controls\">\r\n      <button @click=\"togglePlay\">{{ isPlaying ? 'ÊöÇÂÅú' : 'Êí≠Êîæ' }}</button>\r\n    </div>\r\n\r\n    <div class=\"progress\">\r\n      <span>{{ currentTimeDisplay }}</span>\r\n      <input type=\"range\" min=\"0\" :max=\"duration\" v-model=\"currentTime\" @input=\"seekAudio\" />\r\n      <span>{{ durationDisplay }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: 'Êú¨üâëÊúÄÁà±ÁöÑ BGM',\r\n      artist: 'ËôöÊãüÊ≠åÂß¨ AIÈÖ±',\r\n      cover: 'https://link-to-cover.jpg',\r\n      audioSrc: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3',\r\n      isPlaying: false,\r\n      duration: 0,\r\n      currentTime: 0\r\n    };\r\n  },\r\n  computed: {\r\n    currentTimeDisplay() {\r\n      return this.formatTime(this.currentTime);\r\n    },\r\n    durationDisplay() {\r\n      return this.formatTime(this.duration);\r\n    }\r\n  },\r\n  methods: {\r\n    togglePlay() {\r\n      const audio = this.$refs.audio;\r\n      if (this.isPlaying) {\r\n        audio.pause();\r\n      } else {\r\n        audio.play();\r\n      }\r\n      this.isPlaying = !this.isPlaying;\r\n    },\r\n    updateTime() {\r\n      this.currentTime = this.$refs.audio.currentTime;\r\n    },\r\n    loadMetadata() {\r\n      this.duration = this.$refs.audio.duration;\r\n    },\r\n    seekAudio() {\r\n      this.$refs.audio.currentTime = this.currentTime;\r\n    },\r\n    formatTime(time) {\r\n      const minutes = Math.floor(time / 60);\r\n      const seconds = Math.floor(time % 60).toString().padStart(2, '0');\r\n      return `${minutes}:${seconds}`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.player-container {\r\n  max-width: 400px;\r\n  margin: auto;\r\n  text-align: center;\r\n  font-family: \"Helvetica Neue\", sans-serif;\r\n}\r\n.cover {\r\n  width: 100%;\r\n  border-radius: 12px;\r\n}\r\n.controls button {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  margin-top: 10px;\r\n}\r\n.progress {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n}\r\ninput[type=\"range\"] {\r\n  flex: 1;\r\n  margin: 0 10px;\r\n}\r\n</style>\r\n"],"mappings":"AAqBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,YAAY;MACnBC,MAAM,EAAE,UAAU;MAClBC,KAAK,EAAE,2BAA2B;MAClCC,QAAQ,EAAE,+DAA+D;MACzEC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACC,UAAU,CAAC,IAAI,CAACH,WAAW,CAAC;IAC1C,CAAC;IACDI,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACD,UAAU,CAAC,IAAI,CAACJ,QAAQ,CAAC;IACvC;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,MAAMC,KAAI,GAAI,IAAI,CAACC,KAAK,CAACD,KAAK;MAC9B,IAAI,IAAI,CAACT,SAAS,EAAE;QAClBS,KAAK,CAACE,KAAK,CAAC,CAAC;MACf,OAAO;QACLF,KAAK,CAACG,IAAI,CAAC,CAAC;MACd;MACA,IAAI,CAACZ,SAAQ,GAAI,CAAC,IAAI,CAACA,SAAS;IAClC,CAAC;IACDa,UAAUA,CAAA,EAAG;MACX,IAAI,CAACX,WAAU,GAAI,IAAI,CAACQ,KAAK,CAACD,KAAK,CAACP,WAAW;IACjD,CAAC;IACDY,YAAYA,CAAA,EAAG;MACb,IAAI,CAACb,QAAO,GAAI,IAAI,CAACS,KAAK,CAACD,KAAK,CAACR,QAAQ;IAC3C,CAAC;IACDc,SAASA,CAAA,EAAG;MACV,IAAI,CAACL,KAAK,CAACD,KAAK,CAACP,WAAU,GAAI,IAAI,CAACA,WAAW;IACjD,CAAC;IACDG,UAAUA,CAACW,IAAI,EAAE;MACf,MAAMC,OAAM,GAAIC,IAAI,CAACC,KAAK,CAACH,IAAG,GAAI,EAAE,CAAC;MACrC,MAAMI,OAAM,GAAIF,IAAI,CAACC,KAAK,CAACH,IAAG,GAAI,EAAE,CAAC,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACjE,OAAO,GAAGL,OAAO,IAAIG,OAAO,EAAE;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}