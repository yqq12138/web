{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ChatWithAI',\n  data() {\n    return {\n      userInput: '',\n      imageFile: null,\n      imageUrl: '',\n      messages: []\n    };\n  },\n  methods: {\n    handleImageChange(e) {\n      const file = e.target.files[0];\n      if (file) {\n        this.imageFile = file;\n        this.imageUrl = URL.createObjectURL(file);\n      }\n    },\n    async sendMessage() {\n      if (!this.userInput && !this.imageFile) return;\n\n      // Ê∑ªÂä†Áî®Êà∑Ê∂àÊÅØ\n      this.messages.push({\n        role: 'user',\n        text: this.userInput || 'Ôºà‰ªÖ‰∏ä‰º†ÂõæÁâáÔºâ',\n        imageUrl: this.imageUrl || null\n      });\n      const formData = new FormData();\n      if (this.userInput) formData.append('text', this.userInput);\n      if (this.imageFile) formData.append('image', this.imageFile);\n      try {\n        const res = await axios.post('/api/ai/chat', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        this.messages.push({\n          role: 'assistant',\n          text: res.data.reply || '(Êó†ËøîÂõûÂÜÖÂÆπ)'\n        });\n      } catch (err) {\n        this.messages.push({\n          role: 'assistant',\n          text: 'ËØ∑Ê±ÇÂ§±Ë¥•Ôºö' + err.message\n        });\n      } finally {\n        this.userInput = '';\n        this.imageFile = null;\n        this.imageUrl = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","userInput","imageFile","imageUrl","messages","methods","handleImageChange","e","file","target","files","URL","createObjectURL","sendMessage","push","role","text","formData","FormData","append","res","post","headers","reply","err","message"],"sources":["D:\\web\\qianrushi\\my-first-vue-app\\src\\views\\ChatWithAI.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-page\">\r\n    <div class=\"chat-box\">\r\n      <h2>üí¨ AI ÂØπËØùÁ≥ªÁªü</h2>\r\n      <div class=\"chat-history\">\r\n        <div v-for=\"(msg, index) in messages\" :key=\"index\" :class=\"['msg', msg.role]\">\r\n          <p><strong>{{ msg.role === 'user' ? 'ÊàëÔºö' : 'AIÔºö' }}</strong> {{ msg.text }}</p>\r\n          <img v-if=\"msg.imageUrl\" :src=\"msg.imageUrl\" class=\"chat-image\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"chat-inputs\">\r\n        <input\r\n            v-model=\"userInput\"\r\n            type=\"text\"\r\n            placeholder=\"ËæìÂÖ•ÂÜÖÂÆπÔºàÂèØÈÄâÔºâ\"\r\n            @keyup.enter=\"sendMessage\"\r\n            class=\"chat-input\"\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" @change=\"handleImageChange\" class=\"file-input\" />\r\n        <button class=\"send-btn\" @click=\"sendMessage\">ÂèëÈÄÅ</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"background-decor\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'ChatWithAI',\r\n  data() {\r\n    return {\r\n      userInput: '',\r\n      imageFile: null,\r\n      imageUrl: '',\r\n      messages: []\r\n    }\r\n  },\r\n  methods: {\r\n    handleImageChange(e) {\r\n      const file = e.target.files[0]\r\n      if (file) {\r\n        this.imageFile = file\r\n        this.imageUrl = URL.createObjectURL(file)\r\n      }\r\n    },\r\n    async sendMessage() {\r\n      if (!this.userInput && !this.imageFile) return\r\n\r\n      // Ê∑ªÂä†Áî®Êà∑Ê∂àÊÅØ\r\n      this.messages.push({\r\n        role: 'user',\r\n        text: this.userInput || 'Ôºà‰ªÖ‰∏ä‰º†ÂõæÁâáÔºâ',\r\n        imageUrl: this.imageUrl || null\r\n      })\r\n\r\n      const formData = new FormData()\r\n      if (this.userInput) formData.append('text', this.userInput)\r\n      if (this.imageFile) formData.append('image', this.imageFile)\r\n\r\n      try {\r\n        const res = await axios.post('/api/ai/chat', formData, {\r\n          headers: { 'Content-Type': 'multipart/form-data' }\r\n        })\r\n\r\n        this.messages.push({\r\n          role: 'assistant',\r\n          text: res.data.reply || '(Êó†ËøîÂõûÂÜÖÂÆπ)'\r\n        })\r\n      } catch (err) {\r\n        this.messages.push({\r\n          role: 'assistant',\r\n          text: 'ËØ∑Ê±ÇÂ§±Ë¥•Ôºö' + err.message\r\n        })\r\n      } finally {\r\n        this.userInput = ''\r\n        this.imageFile = null\r\n        this.imageUrl = ''\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chat-page {\r\n  position: absolute;\r\n  top: 60px;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: linear-gradient(to right, #1c1c1c, #2a2a2a);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 40px 20px;\r\n  overflow: auto;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chat-box {\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #00eaff55;\r\n  border-radius: 12px;\r\n  box-shadow: 0 0 20px rgba(0, 234, 255, 0.1);\r\n  padding: 30px;\r\n  max-width: 700px;\r\n  width: 100%;\r\n}\r\n\r\n.chat-box h2 {\r\n  font-size: 24px;\r\n  color: #00eaff;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chat-history {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  padding-right: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.msg {\r\n  margin-bottom: 16px;\r\n  color: #e0f7ff;\r\n}\r\n\r\n.msg.user {\r\n  text-align: right;\r\n  color: #bbdefb;\r\n}\r\n\r\n.msg.assistant {\r\n  text-align: left;\r\n  color: #c8e6c9;\r\n}\r\n\r\n.chat-image {\r\n  max-width: 200px;\r\n  margin-top: 10px;\r\n  border-radius: 8px;\r\n  display: block;\r\n}\r\n\r\n.chat-inputs {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.chat-input {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: 1px solid #00eaff55;\r\n  border-radius: 8px;\r\n  background: #222;\r\n  color: #fff;\r\n  outline: none;\r\n}\r\n\r\n.file-input {\r\n  color: #fff;\r\n}\r\n\r\n.send-btn {\r\n  padding: 10px 20px;\r\n  background: #00eaff;\r\n  border: none;\r\n  border-radius: 8px;\r\n  color: #000;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n}\r\n.send-btn:hover {\r\n  background: #00bcd4;\r\n}\r\n\r\n.background-decor {\r\n  position: absolute;\r\n  bottom: -100px;\r\n  left: -150px;\r\n  width: 400px;\r\n  height: 400px;\r\n  background: radial-gradient(circle at center, rgba(0, 234, 255, 0.2), transparent);\r\n  filter: blur(120px);\r\n  pointer-events: none;\r\n}\r\n</style>\r\n"],"mappings":";AA4BA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAACC,CAAC,EAAE;MACnB,MAAMC,IAAG,GAAID,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MAC7B,IAAIF,IAAI,EAAE;QACR,IAAI,CAACN,SAAQ,GAAIM,IAAG;QACpB,IAAI,CAACL,QAAO,GAAIQ,GAAG,CAACC,eAAe,CAACJ,IAAI;MAC1C;IACF,CAAC;IACD,MAAMK,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACZ,SAAQ,IAAK,CAAC,IAAI,CAACC,SAAS,EAAE;;MAExC;MACA,IAAI,CAACE,QAAQ,CAACU,IAAI,CAAC;QACjBC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE,IAAI,CAACf,SAAQ,IAAK,SAAS;QACjCE,QAAQ,EAAE,IAAI,CAACA,QAAO,IAAK;MAC7B,CAAC;MAED,MAAMc,QAAO,GAAI,IAAIC,QAAQ,CAAC;MAC9B,IAAI,IAAI,CAACjB,SAAS,EAAEgB,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAClB,SAAS;MAC1D,IAAI,IAAI,CAACC,SAAS,EAAEe,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACjB,SAAS;MAE3D,IAAI;QACF,MAAMkB,GAAE,GAAI,MAAMtB,KAAK,CAACuB,IAAI,CAAC,cAAc,EAAEJ,QAAQ,EAAE;UACrDK,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACnD,CAAC;QAED,IAAI,CAAClB,QAAQ,CAACU,IAAI,CAAC;UACjBC,IAAI,EAAE,WAAW;UACjBC,IAAI,EAAEI,GAAG,CAACpB,IAAI,CAACuB,KAAI,IAAK;QAC1B,CAAC;MACH,EAAE,OAAOC,GAAG,EAAE;QACZ,IAAI,CAACpB,QAAQ,CAACU,IAAI,CAAC;UACjBC,IAAI,EAAE,WAAW;UACjBC,IAAI,EAAE,OAAM,GAAIQ,GAAG,CAACC;QACtB,CAAC;MACH,UAAU;QACR,IAAI,CAACxB,SAAQ,GAAI,EAAC;QAClB,IAAI,CAACC,SAAQ,GAAI,IAAG;QACpB,IAAI,CAACC,QAAO,GAAI,EAAC;MACnB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}