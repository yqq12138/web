{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"detect-page\"\n};\nconst _hoisted_2 = {\n  class: \"result-section\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"waiting\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"result-box\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", null, \"检测结果\", -1 /* HOISTED */)), !_ctx.detectionResult ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" 🕒 正在等待检测结果，请稍候... \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"⚙️ 异常检测信息：\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"部件名称：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString(_ctx.detectionResult.partName), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"检测时间：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString(_ctx.detectionResult.time), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"检测结果：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString(_ctx.detectionResult.result), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"置信度：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString(_ctx.detectionResult.confidence) + \"%\", 1 /* TEXT */)])]))]), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"background-decor\"\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_ctx","detectionResult","_hoisted_3","_hoisted_4","_createTextVNode","_toDisplayString","partName","time","result","confidence"],"sources":["D:\\web\\my-first-vue-app\\src\\views\\DetectPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"detect-page\">\r\n    <section class=\"result-section\">\r\n      <h1>检测结果</h1>\r\n\r\n      <div v-if=\"!detectionResult\" class=\"waiting\">\r\n        🕒 正在等待检测结果，请稍候...\r\n      </div>\r\n\r\n      <div v-else class=\"result-box\">\r\n        <h2>⚙️ 异常检测信息：</h2>\r\n        <p><strong>部件名称：</strong>{{ detectionResult.partName }}</p>\r\n        <p><strong>检测时间：</strong>{{ detectionResult.time }}</p>\r\n        <p><strong>检测结果：</strong>{{ detectionResult.result }}</p>\r\n        <p><strong>置信度：</strong>{{ detectionResult.confidence }}%</p>\r\n      </div>\r\n    </section>\r\n\r\n    <div class=\"background-decor\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'DetectPage',\r\n  data() {\r\n    return {\r\n      // 模拟一个检测结果，后续可通过 props 或 API 替换\r\n      detectionResult: null,\r\n       示例：你可以把这段注释解除以模拟结果出现\r\n      detectionResult: {\r\n         partName: '轴承-234X',\r\n         time: '2025-05-18 14:25:00',\r\n         result: '检测到裂纹',\r\n         confidence: 92.7\r\n       }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.detect-page {\r\n  position: absolute;\r\n  top: 60px;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: linear-gradient(to right, #232526, #414345);\r\n  color: #fff;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.result-section {\r\n  max-width: 800px;\r\n  text-align: center;\r\n  padding: 40px 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.result-section h1 {\r\n  font-size: 42px;\r\n  margin-bottom: 30px;\r\n  text-shadow: 1px 1px 4px #000;\r\n}\r\n\r\n.waiting {\r\n  font-size: 20px;\r\n  color: #ccc;\r\n  font-style: italic;\r\n}\r\n\r\n.result-box {\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #00eaff55;\r\n  padding: 30px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 0 20px rgba(0, 234, 255, 0.1);\r\n  text-align: left;\r\n}\r\n\r\n.result-box h2 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  color: #00eaff;\r\n}\r\n\r\n.result-box p {\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n  line-height: 1.5;\r\n  color: #e0f7ff;\r\n}\r\n\r\n/* 背景光影 */\r\n.background-decor {\r\n  position: absolute;\r\n  bottom: -100px;\r\n  left: -150px;\r\n  width: 400px;\r\n  height: 400px;\r\n  background: radial-gradient(circle at center, rgba(0, 234, 255, 0.3), transparent);\r\n  filter: blur(120px);\r\n  pointer-events: none;\r\n  user-select: none;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EACbA,KAAK,EAAC;AAAgB;;EAFnCC,GAAA;EAKmCD,KAAK,EAAC;;;EALzCC,GAAA;EASkBD,KAAK,EAAC;;;uBARtBE,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,mBAAA,CAcU,WAdVC,UAcU,G,0BAbRD,mBAAA,CAAa,YAAT,MAAI,sB,CAEIE,IAAA,CAAAC,eAAe,I,cAA3BL,mBAAA,CAEM,OAFNM,UAEM,EAFuC,sBAE7C,M,cAEAN,mBAAA,CAMM,OANNO,UAMM,G,0BALJL,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAA2D,Y,0BAAxDA,mBAAA,CAAsB,gBAAd,OAAK,sBAXxBM,gBAAA,CAAAC,gBAAA,CAWoCL,IAAA,CAAAC,eAAe,CAACK,QAAQ,iB,GACpDR,mBAAA,CAAuD,Y,0BAApDA,mBAAA,CAAsB,gBAAd,OAAK,sBAZxBM,gBAAA,CAAAC,gBAAA,CAYoCL,IAAA,CAAAC,eAAe,CAACM,IAAI,iB,GAChDT,mBAAA,CAAyD,Y,0BAAtDA,mBAAA,CAAsB,gBAAd,OAAK,sBAbxBM,gBAAA,CAAAC,gBAAA,CAaoCL,IAAA,CAAAC,eAAe,CAACO,MAAM,iB,GAClDV,mBAAA,CAA6D,Y,0BAA1DA,mBAAA,CAAqB,gBAAb,MAAI,sBAdvBM,gBAAA,CAAAC,gBAAA,CAcmCL,IAAA,CAAAC,eAAe,CAACQ,UAAU,IAAG,GAAC,gB,kCAI7DX,mBAAA,CAAoC;IAA/BJ,KAAK,EAAC;EAAkB,4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}