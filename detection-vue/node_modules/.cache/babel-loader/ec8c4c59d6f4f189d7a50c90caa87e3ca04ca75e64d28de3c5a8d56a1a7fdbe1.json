{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"history-page\"\n};\nconst _hoisted_2 = {\n  class: \"history-section\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"no-history\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"record-list\"\n};\nconst _hoisted_5 = {\n  class: \"record-info\"\n};\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"历史检测记录\", -1 /* HOISTED */)), $data.history.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" 暂无检测记录，请先上传并检测图片。 \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.history, record => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"record-item\",\n      key: record.id\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"部件：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString(record.partName), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"检测时间：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString(record.time), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"结果：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString(record.result), 1 /* TEXT */)])]), _createElementVNode(\"button\", {\n      class: \"detail-button\",\n      onClick: $event => $options.goToDetail(record.id)\n    }, \"了解详情\", 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))]))]), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"background-decor\"\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","history","length","_hoisted_3","_hoisted_4","_Fragment","_renderList","record","id","_hoisted_5","_createTextVNode","_toDisplayString","partName","time","result","onClick","$event","$options","goToDetail","_hoisted_6"],"sources":["D:\\web\\my-first-vue-app\\src\\views\\HistoryPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"history-page\">\r\n    <section class=\"history-section\">\r\n      <h1>历史检测记录</h1>\r\n\r\n      <div v-if=\"history.length === 0\" class=\"no-history\">\r\n        暂无检测记录，请先上传并检测图片。\r\n      </div>\r\n\r\n      <div v-else class=\"record-list\">\r\n        <div class=\"record-item\" v-for=\"record in history\" :key=\"record.id\">\r\n          <div class=\"record-info\">\r\n            <p><strong>部件：</strong>{{ record.partName }}</p>\r\n            <p><strong>检测时间：</strong>{{ record.time }}</p>\r\n            <p><strong>结果：</strong>{{ record.result }}</p>\r\n          </div>\r\n          <button class=\"detail-button\" @click=\"goToDetail(record.id)\">了解详情</button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <div class=\"background-decor\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'HistoryPage',\r\n  data() {\r\n    return {\r\n      history: []\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchHistory()\r\n  },\r\n  methods: {\r\n    fetchHistory() {\r\n      axios.get('/api/detect/history')\r\n          .then(res => {\r\n            this.history = res.data\r\n          })\r\n          .catch(err => {\r\n            console.error('获取历史失败', err)\r\n            this.history = [\r\n              {id: 1, partName: '螺栓-A1', time: '2025-05-17 14:00', result: '正常'},\r\n              {id: 2, partName: '阀门-B2', time: '2025-05-17 15:30', result: '裂纹'}\r\n            ]\r\n          })\r\n    },\r\n    goToDetail(id) {\r\n      this.$router.push({name: 'ResultDetail', params: {id}})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 你的样式保持不变 */\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EACdA,KAAK,EAAC;AAAiB;;EAFpCC,GAAA;EAKuCD,KAAK,EAAC;;;EAL7CC,GAAA;EASkBD,KAAK,EAAC;;;EAETA,KAAK,EAAC;AAAa;mBAXlC;;uBACEE,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,mBAAA,CAiBU,WAjBVC,UAiBU,G,0BAhBRD,mBAAA,CAAe,YAAX,QAAM,sBAECE,KAAA,CAAAC,OAAO,CAACC,MAAM,U,cAAzBN,mBAAA,CAEM,OAFNO,UAEM,EAF8C,qBAEpD,M,cAEAP,mBAAA,CASM,OATNQ,UASM,I,kBARJR,mBAAA,CAOMS,SAAA,QAjBdC,WAAA,CAUkDN,KAAA,CAAAC,OAAO,EAAjBM,MAAM;yBAAtCX,mBAAA,CAOM;MAPDF,KAAK,EAAC,aAAa;MAA4BC,GAAG,EAAEY,MAAM,CAACC;QAC9DV,mBAAA,CAIM,OAJNW,UAIM,GAHJX,mBAAA,CAAgD,Y,0BAA7CA,mBAAA,CAAoB,gBAAZ,KAAG,sBAZ1BY,gBAAA,CAAAC,gBAAA,CAYsCJ,MAAM,CAACK,QAAQ,iB,GACzCd,mBAAA,CAA8C,Y,0BAA3CA,mBAAA,CAAsB,gBAAd,OAAK,sBAb5BY,gBAAA,CAAAC,gBAAA,CAawCJ,MAAM,CAACM,IAAI,iB,GACvCf,mBAAA,CAA8C,Y,0BAA3CA,mBAAA,CAAoB,gBAAZ,KAAG,sBAd1BY,gBAAA,CAAAC,gBAAA,CAcsCJ,MAAM,CAACO,MAAM,iB,KAEzChB,mBAAA,CAA0E;MAAlEJ,KAAK,EAAC,eAAe;MAAEqB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACX,MAAM,CAACC,EAAE;OAAG,MAAI,iBAhB3EW,UAAA,E;iEAqBIrB,mBAAA,CAAoC;IAA/BJ,KAAK,EAAC;EAAkB,4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}