{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withKeys as _withKeys, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-history\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"chat-input-area\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, (msg, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', msg.role])\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(msg.role === 'user' ? '我：' : 'AI：'), 1 /* TEXT */), msg.text ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(msg.text), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), msg.imageUrl ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 1,\n      src: msg.imageUrl,\n      class: \"chat-image\"\n    }, null, 8 /* PROPS */, _hoisted_4)) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_input, {\n    modelValue: $setup.userInput,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userInput = $event),\n    placeholder: \"请输入你的问题\",\n    clearable: \"\",\n    onKeyup: _withKeys($setup.sendMessage, [\"enter\"])\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_upload, {\n    class: \"upload\",\n    action: \"\",\n    \"auto-upload\": false,\n    \"show-file-list\": false,\n    \"on-change\": $setup.handleImageChange\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"primary\",\n      plain: \"\"\n    }, {\n      default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"上传图片\")])),\n      _: 1 /* STABLE */,\n      __: [1]\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"success\",\n    onClick: $setup.sendMessage\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"发送\")])),\n    _: 1 /* STABLE */,\n    __: [2]\n  })])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","messages","msg","index","_normalizeClass","role","_toDisplayString","text","_hoisted_3","_createCommentVNode","imageUrl","src","_hoisted_4","_hoisted_5","_createVNode","_component_el_input","modelValue","userInput","_cache","$event","placeholder","clearable","onKeyup","_withKeys","sendMessage","_component_el_upload","action","handleImageChange","default","_withCtx","_component_el_button","type","plain","_createTextVNode","_","__","onClick"],"sources":["D:\\web\\qianrushi\\my-first-vue-app\\src\\views\\ChatWithAI.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\">\r\n    <div class=\"chat-history\">\r\n      <div\r\n          v-for=\"(msg, index) in messages\"\r\n          :key=\"index\"\r\n          :class=\"['message', msg.role]\"\r\n      >\r\n        <strong>{{ msg.role === 'user' ? '我：' : 'AI：' }}</strong>\r\n        <div v-if=\"msg.text\">{{ msg.text }}</div>\r\n        <img v-if=\"msg.imageUrl\" :src=\"msg.imageUrl\" class=\"chat-image\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"chat-input-area\">\r\n      <el-input\r\n          v-model=\"userInput\"\r\n          placeholder=\"请输入你的问题\"\r\n          clearable\r\n          @keyup.enter=\"sendMessage\"\r\n      />\r\n\r\n      <el-upload\r\n          class=\"upload\"\r\n          action=\"\"\r\n          :auto-upload=\"false\"\r\n          :show-file-list=\"false\"\r\n          :on-change=\"handleImageChange\"\r\n      >\r\n        <el-button type=\"primary\" plain>上传图片</el-button>\r\n      </el-upload>\r\n\r\n      <el-button type=\"success\" @click=\"sendMessage\">发送</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport axios from 'axios'\r\n\r\nconst userInput = ref('')\r\nconst messages = ref([])\r\nconst imageFile = ref(null)\r\nconst imageUrl = ref('')\r\n\r\n/** 上传图片事件 */\r\nfunction handleImageChange(file) {\r\n  imageFile.value = file.raw\r\n  imageUrl.value = URL.createObjectURL(file.raw)\r\n}\r\n\r\n/** 发送消息给后端 */\r\nasync function sendMessage() {\r\n  if (!userInput.value && !imageFile.value) return\r\n\r\n  // 添加用户消息到界面\r\n  messages.value.push({\r\n    role: 'user',\r\n    text: userInput.value || '（仅上传图片）',\r\n    imageUrl: imageUrl.value || null,\r\n  })\r\n\r\n  try {\r\n    const formData = new FormData()\r\n    if (userInput.value) formData.append('text', userInput.value)\r\n    if (imageFile.value) formData.append('image', imageFile.value)\r\n\r\n    // TODO: 改成你实际后端接收文本+图片的接口\r\n    const res = await axios.post('/api/ai/chat', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    })\r\n\r\n    // 添加AI回复\r\n    messages.value.push({\r\n      role: 'assistant',\r\n      text: res.data.reply,\r\n    })\r\n  } catch (err) {\r\n    messages.value.push({\r\n      role: 'assistant',\r\n      text: '请求失败: ' + err.message,\r\n    })\r\n  } finally {\r\n    userInput.value = ''\r\n    imageFile.value = null\r\n    imageUrl.value = ''\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n.chat-history {\r\n  border: 1px solid #ccc;\r\n  border-radius: 12px;\r\n  padding: 15px;\r\n  height: 400px;\r\n  overflow-y: auto;\r\n  background: #fefefe;\r\n  margin-bottom: 20px;\r\n}\r\n.message {\r\n  margin: 10px 0;\r\n  padding: 8px 12px;\r\n  border-radius: 10px;\r\n  line-height: 1.5;\r\n  word-break: break-word;\r\n}\r\n.message.user {\r\n  background: #e1f5fe;\r\n  text-align: right;\r\n}\r\n.message.assistant {\r\n  background: #e8f5e9;\r\n  text-align: left;\r\n}\r\n.chat-image {\r\n  max-width: 200px;\r\n  max-height: 200px;\r\n  margin-top: 10px;\r\n  border-radius: 8px;\r\n}\r\n.chat-input-area {\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAc;;EAF7BC,GAAA;AAAA;mBAAA;;EAcSD,KAAK,EAAC;AAAiB;;;;;uBAb9BE,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJC,mBAAA,CAUM,OAVNC,UAUM,I,kBATJH,mBAAA,CAQMI,SAAA,QAXZC,WAAA,CAIiCC,MAAA,CAAAC,QAAQ,EAJzC,CAIkBC,GAAG,EAAEC,KAAK;yBADtBT,mBAAA,CAQM;MANDD,GAAG,EAAEU,KAAK;MACVX,KAAK,EANhBY,eAAA,aAM8BF,GAAG,CAACG,IAAI;QAE9BT,mBAAA,CAAyD,gBAAAU,gBAAA,CAA9CJ,GAAG,CAACG,IAAI,4CACRH,GAAG,CAACK,IAAI,I,cAAnBb,mBAAA,CAAyC,OATjDc,UAAA,EAAAF,gBAAA,CASgCJ,GAAG,CAACK,IAAI,oBATxCE,mBAAA,gBAUmBP,GAAG,CAACQ,QAAQ,I,cAAvBhB,mBAAA,CAAkE;MAV1ED,GAAA;MAUkCkB,GAAG,EAAET,GAAG,CAACQ,QAAQ;MAAElB,KAAK,EAAC;4BAV3DoB,UAAA,KAAAH,mBAAA,e;oCAcIb,mBAAA,CAmBM,OAnBNiB,UAmBM,GAlBJC,YAAA,CAKEC,mBAAA;IApBRC,UAAA,EAgBmBhB,MAAA,CAAAiB,SAAS;IAhB5B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgBmBnB,MAAA,CAAAiB,SAAS,GAAAE,MAAA;IAClBC,WAAW,EAAC,SAAS;IACrBC,SAAS,EAAT,EAAS;IACRC,OAAK,EAnBhBC,SAAA,CAmBwBvB,MAAA,CAAAwB,WAAW;2CAG7BV,YAAA,CAQYW,oBAAA;IAPRjC,KAAK,EAAC,QAAQ;IACdkC,MAAM,EAAC,EAAE;IACR,aAAW,EAAE,KAAK;IAClB,gBAAc,EAAE,KAAK;IACrB,WAAS,EAAE1B,MAAA,CAAA2B;;IA3BtBC,OAAA,EAAAC,QAAA,CA6BQ,MAAgD,CAAhDf,YAAA,CAAgDgB,oBAAA;MAArCC,IAAI,EAAC,SAAS;MAACC,KAAK,EAAL;;MA7BlCJ,OAAA,EAAAC,QAAA,CA6BwC,MAAIX,MAAA,QAAAA,MAAA,OA7B5Ce,gBAAA,CA6BwC,MAAI,E;MA7B5CC,CAAA;MAAAC,EAAA;;IAAAD,CAAA;MAgCMpB,YAAA,CAA6DgB,oBAAA;IAAlDC,IAAI,EAAC,SAAS;IAAEK,OAAK,EAAEpC,MAAA,CAAAwB;;IAhCxCI,OAAA,EAAAC,QAAA,CAgCqD,MAAEX,MAAA,QAAAA,MAAA,OAhCvDe,gBAAA,CAgCqD,IAAE,E;IAhCvDC,CAAA;IAAAC,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}