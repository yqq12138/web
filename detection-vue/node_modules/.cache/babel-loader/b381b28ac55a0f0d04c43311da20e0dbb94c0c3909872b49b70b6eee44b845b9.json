{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  data() {\n    return {\n      messages: [],\n      loading: false\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n      const reader = new FileReader();\n      reader.onload = e => {\n        const base64Data = e.target.result.split(',')[1];\n        const mimeType = file.type;\n\n        // 构造仅用于发送的 message，不 push 给界面显示\n        const imageMessage = {\n          role: \"user\",\n          content: [{\n            type: \"text\",\n            text: \"请分析这张图片中的工件是否存在异常。如果存在异常，请以JSON格式返回分析结果，包括异常描述和异常部位的坐标（格式：{\\\"x1\\\": 左上角x, \\\"y1\\\": 左上角y, \\\"x2\\\": 右下角x, \\\"y2\\\": 右下角y}）。例如：{\\\"analysis\\\": \\\"发现裂纹\\\",\\\"coordinates\\\": {\\\"x1\\\": 100, \\\"y1\\\": 200, \\\"x2\\\": 150, \\\"y2\\\": 250}}\"\n          }, {\n            type: \"image_url\",\n            image_url: {\n              url: `data:${mimeType};base64,${base64Data}`\n            }\n          }]\n        };\n\n        // 可选：添加“你上传了一张图片”提示\n        this.messages.push({\n          role: \"user\",\n          content: [{\n            type: \"text\",\n            text: \"[图片已上传]\"\n          }]\n        });\n        this.sendToAI([imageMessage]);\n      };\n      reader.readAsDataURL(file);\n    },\n    sendToAI(newMessages) {\n      this.loading = true;\n      fetch('/api/detection/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: newMessages\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          const responseMessages = data.messages.map(msg => {\n            if (msg.role === 'assistant' && typeof msg.content === 'string') {\n              try {\n                msg.content = JSON.parse(msg.content);\n              } catch {\n                msg.content = {\n                  analysis: msg.content\n                };\n              }\n            }\n            return msg;\n          });\n          this.messages.push(...responseMessages);\n          this.$nextTick(() => {\n            const el = this.$refs.chatHistory;\n            if (el) el.scrollTop = el.scrollHeight;\n          });\n        } else {\n          alert(\"错误: \" + data.error);\n        }\n      }).catch(err => alert(\"网络错误: \" + err)).finally(() => {\n        this.loading = false;\n      });\n    },\n    extractText(content) {\n      if (Array.isArray(content)) {\n        return content.map(c => c.type === 'text' ? c.text : '').join(' ').trim();\n      } else if (typeof content === 'string') {\n        return content;\n      }\n      return '';\n    }\n  }\n};","map":{"version":3,"names":["data","messages","loading","methods","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","base64Data","result","split","mimeType","type","imageMessage","role","content","text","image_url","url","push","sendToAI","readAsDataURL","newMessages","fetch","method","headers","body","JSON","stringify","then","res","json","success","responseMessages","map","msg","parse","analysis","$nextTick","el","$refs","chatHistory","scrollTop","scrollHeight","alert","error","catch","err","finally","extractText","Array","isArray","c","join","trim"],"sources":["D:\\web\\qianrushi\\my-first-vue-app\\src\\views\\ChatWithAI.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"chat-box\">\r\n      <h1>AI图片对话系统</h1>\r\n\r\n      <div class=\"upload-section\">\r\n        <input type=\"file\" accept=\"image/*\" @change=\"handleImageUpload\">\r\n        <p>（请上传图片进行AI识别）</p>\r\n      </div>\r\n\r\n      <div class=\"chat-history\" ref=\"chatHistory\">\r\n        <div v-for=\"(msg, index) in messages\" :key=\"index\" :class=\"['message', msg.role === 'user' ? 'user-message' : 'ai-message']\">\r\n          <template v-if=\"msg.role === 'user'\">\r\n            <span class=\"prefix\">你：</span>{{ extractText(msg.content) }}\r\n          </template>\r\n          <template v-else>\r\n            <template v-if=\"typeof msg.content === 'object' && msg.content.analysis\">\r\n              <div class=\"analysis-text\">分析结果: {{ msg.content.analysis }}</div>\r\n              <div class=\"coordinates-text\">\r\n                异常坐标: ({{ msg.content.coordinates.x1 }}, {{ msg.content.coordinates.y1 }}) 至 ({{ msg.content.coordinates.x2 }}, {{ msg.content.coordinates.y2 }})\r\n              </div>\r\n              <div class=\"image-container\">\r\n                <img v-if=\"msg.content.marked_image\" :src=\"msg.content.marked_image\" alt=\"标注图\" class=\"annotated-image\" />\r\n                <img v-else-if=\"msg.content.original_image\" :src=\"msg.content.original_image\" alt=\"原图\" class=\"original-image\" />\r\n              </div>\r\n            </template>\r\n            <template v-else>\r\n              <span class=\"prefix\">助手：</span>{{ extractText(msg.content) }}\r\n            </template>\r\n          </template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"background-decor\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      messages: [],\r\n      loading: false\r\n    };\r\n  },\r\n  methods: {\r\n    handleImageUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const base64Data = e.target.result.split(',')[1];\r\n        const mimeType = file.type;\r\n\r\n        // 构造仅用于发送的 message，不 push 给界面显示\r\n        const imageMessage = {\r\n          role: \"user\",\r\n          content: [\r\n            {\r\n              type: \"text\",\r\n              text: \"请分析这张图片中的工件是否存在异常。如果存在异常，请以JSON格式返回分析结果，包括异常描述和异常部位的坐标（格式：{\\\"x1\\\": 左上角x, \\\"y1\\\": 左上角y, \\\"x2\\\": 右下角x, \\\"y2\\\": 右下角y}）。例如：{\\\"analysis\\\": \\\"发现裂纹\\\",\\\"coordinates\\\": {\\\"x1\\\": 100, \\\"y1\\\": 200, \\\"x2\\\": 150, \\\"y2\\\": 250}}\"\r\n            },\r\n            {\r\n              type: \"image_url\",\r\n              image_url: {\r\n                url: `data:${mimeType};base64,${base64Data}`\r\n              }\r\n            }\r\n          ]\r\n        };\r\n\r\n        // 可选：添加“你上传了一张图片”提示\r\n        this.messages.push({\r\n          role: \"user\",\r\n          content: [\r\n            {\r\n              type: \"text\",\r\n              text: \"[图片已上传]\"\r\n            }\r\n          ]\r\n        });\r\n\r\n        this.sendToAI([imageMessage]);\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    },\r\n\r\n    sendToAI(newMessages) {\r\n      this.loading = true;\r\n      fetch('/api/detection/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ messages: newMessages })\r\n      })\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            if (data.success) {\r\n              const responseMessages = data.messages.map(msg => {\r\n                if (msg.role === 'assistant' && typeof msg.content === 'string') {\r\n                  try {\r\n                    msg.content = JSON.parse(msg.content);\r\n                  } catch {\r\n                    msg.content = { analysis: msg.content };\r\n                  }\r\n                }\r\n                return msg;\r\n              });\r\n\r\n              this.messages.push(...responseMessages);\r\n\r\n              this.$nextTick(() => {\r\n                const el = this.$refs.chatHistory;\r\n                if (el) el.scrollTop = el.scrollHeight;\r\n              });\r\n            } else {\r\n              alert(\"错误: \" + data.error);\r\n            }\r\n          })\r\n          .catch(err => alert(\"网络错误: \" + err))\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n    extractText(content) {\r\n      if (Array.isArray(content)) {\r\n        return content.map(c => c.type === 'text' ? c.text : '').join(' ').trim();\r\n      } else if (typeof content === 'string') {\r\n        return content;\r\n      }\r\n      return '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  position: absolute;\r\n  top: 60px;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: linear-gradient(to right, #1c1c1c, #2a2a2a);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding: 40px 20px;\r\n  overflow: auto;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chat-box {\r\n  width: 100%;\r\n  max-width: 700px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #00eaff55;\r\n  border-radius: 12px;\r\n  box-shadow: 0 0 20px rgba(0, 234, 255, 0.1);\r\n  padding: 30px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chat-box h1 {\r\n  font-size: 24px;\r\n  color: #00eaff;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.upload-section {\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  color: #aaa;\r\n}\r\n\r\n.chat-history {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  padding-right: 8px;\r\n  margin-bottom: 20px;\r\n  background: rgba(255, 255, 255, 0.03);\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  border: 1px solid #00eaff22;\r\n  box-shadow: inset 0 0 10px rgba(0, 234, 255, 0.05);\r\n}\r\n\r\n.message {\r\n  margin-bottom: 16px;\r\n  padding: 12px 16px;\r\n  border-radius: 10px;\r\n  max-width: 80%;\r\n  word-break: break-word;\r\n  line-height: 1.6;\r\n  font-size: 15px;\r\n}\r\n\r\n.user-message {\r\n  background: #003344;\r\n  color: #bbdefb;\r\n  margin-left: auto;\r\n  text-align: right;\r\n}\r\n\r\n.ai-message {\r\n  background: #00261f;\r\n  color: #c8e6c9;\r\n  margin-right: auto;\r\n  text-align: left;\r\n}\r\n\r\n.prefix {\r\n  font-weight: bold;\r\n  margin-right: 6px;\r\n}\r\n\r\n.analysis-text {\r\n  font-weight: bold;\r\n  margin-bottom: 8px;\r\n  color: #00ffc3;\r\n}\r\n\r\n.coordinates-text {\r\n  color: #aaf0ff;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.image-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.original-image,\r\n.annotated-image {\r\n  max-width: 200px;\r\n  border-radius: 8px;\r\n  border: 1px solid #00eaff33;\r\n  box-shadow: 0 0 8px rgba(0, 234, 255, 0.2);\r\n}\r\n\r\n.input-area {\r\n  display: flex;\r\n  gap: 10px;\r\n  width: 100%;\r\n}\r\n\r\n.input-area input[type=\"text\"] {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: 1px solid #00eaff55;\r\n  border-radius: 8px;\r\n  background: #222;\r\n  color: #fff;\r\n  outline: none;\r\n}\r\n\r\n.input-area button {\r\n  padding: 10px 20px;\r\n  background: #00eaff;\r\n  border: none;\r\n  border-radius: 8px;\r\n  color: #000;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n}\r\n\r\n.input-area button:hover {\r\n  background: #00bcd4;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  margin: 10px 0;\r\n  color: #fff;\r\n}\r\n\r\n.background-decor {\r\n  position: absolute;\r\n  bottom: -100px;\r\n  left: -150px;\r\n  width: 400px;\r\n  height: 400px;\r\n  background: radial-gradient(circle at center, rgba(0, 234, 255, 0.2), transparent);\r\n  filter: blur(120px);\r\n  pointer-events: none;\r\n}\r\n.loading-animation {\r\n  text-align: center;\r\n  color: #fff;\r\n  margin-top:\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}